// Generated by view binder compiler. Do not edit!
package com.whereu.whereu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.whereu.whereu.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationBar;

  @NonNull
  public final FloatingActionButton fabRequestLocation;

  @NonNull
  public final FrameLayout fragmentContainer;

  @NonNull
  public final Group homeContentGroup;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final RecyclerView recentContactsRecyclerView;

  @NonNull
  public final Button requestLocationButton;

  @NonNull
  public final EditText searchBar;

  @NonNull
  public final RecyclerView searchResultsRecyclerView;

  @NonNull
  public final RecyclerView suggestedContactsCarousel;

  @NonNull
  public final RecyclerView suggestionsRecyclerView;

  @NonNull
  public final TextView titleHome;

  @NonNull
  public final Switch toggleMyContactsOnly;

  @NonNull
  public final ConstraintLayout topBar;

  private ActivityHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavigationBar,
      @NonNull FloatingActionButton fabRequestLocation, @NonNull FrameLayout fragmentContainer,
      @NonNull Group homeContentGroup, @NonNull CircleImageView profileImage,
      @NonNull RecyclerView recentContactsRecyclerView, @NonNull Button requestLocationButton,
      @NonNull EditText searchBar, @NonNull RecyclerView searchResultsRecyclerView,
      @NonNull RecyclerView suggestedContactsCarousel,
      @NonNull RecyclerView suggestionsRecyclerView, @NonNull TextView titleHome,
      @NonNull Switch toggleMyContactsOnly, @NonNull ConstraintLayout topBar) {
    this.rootView = rootView;
    this.bottomNavigationBar = bottomNavigationBar;
    this.fabRequestLocation = fabRequestLocation;
    this.fragmentContainer = fragmentContainer;
    this.homeContentGroup = homeContentGroup;
    this.profileImage = profileImage;
    this.recentContactsRecyclerView = recentContactsRecyclerView;
    this.requestLocationButton = requestLocationButton;
    this.searchBar = searchBar;
    this.searchResultsRecyclerView = searchResultsRecyclerView;
    this.suggestedContactsCarousel = suggestedContactsCarousel;
    this.suggestionsRecyclerView = suggestionsRecyclerView;
    this.titleHome = titleHome;
    this.toggleMyContactsOnly = toggleMyContactsOnly;
    this.topBar = topBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_navigation_bar;
      BottomNavigationView bottomNavigationBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationBar == null) {
        break missingId;
      }

      id = R.id.fab_request_location;
      FloatingActionButton fabRequestLocation = ViewBindings.findChildViewById(rootView, id);
      if (fabRequestLocation == null) {
        break missingId;
      }

      id = R.id.fragment_container;
      FrameLayout fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      id = R.id.home_content_group;
      Group homeContentGroup = ViewBindings.findChildViewById(rootView, id);
      if (homeContentGroup == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.recent_contacts_recycler_view;
      RecyclerView recentContactsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recentContactsRecyclerView == null) {
        break missingId;
      }

      id = R.id.request_location_button;
      Button requestLocationButton = ViewBindings.findChildViewById(rootView, id);
      if (requestLocationButton == null) {
        break missingId;
      }

      id = R.id.search_bar;
      EditText searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.search_results_recycler_view;
      RecyclerView searchResultsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (searchResultsRecyclerView == null) {
        break missingId;
      }

      id = R.id.suggested_contacts_carousel;
      RecyclerView suggestedContactsCarousel = ViewBindings.findChildViewById(rootView, id);
      if (suggestedContactsCarousel == null) {
        break missingId;
      }

      id = R.id.suggestions_recycler_view;
      RecyclerView suggestionsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (suggestionsRecyclerView == null) {
        break missingId;
      }

      id = R.id.title_home;
      TextView titleHome = ViewBindings.findChildViewById(rootView, id);
      if (titleHome == null) {
        break missingId;
      }

      id = R.id.toggle_my_contacts_only;
      Switch toggleMyContactsOnly = ViewBindings.findChildViewById(rootView, id);
      if (toggleMyContactsOnly == null) {
        break missingId;
      }

      id = R.id.top_bar;
      ConstraintLayout topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      return new ActivityHomeBinding((ConstraintLayout) rootView, bottomNavigationBar,
          fabRequestLocation, fragmentContainer, homeContentGroup, profileImage,
          recentContactsRecyclerView, requestLocationButton, searchBar, searchResultsRecyclerView,
          suggestedContactsCarousel, suggestionsRecyclerView, titleHome, toggleMyContactsOnly,
          topBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
