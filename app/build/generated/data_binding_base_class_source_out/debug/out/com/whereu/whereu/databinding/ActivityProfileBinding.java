// Generated by view binder compiler. Do not edit!
package com.whereu.whereu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.whereu.whereu.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SwitchMaterial autoApproveSwitch;

  @NonNull
  public final LinearLayout editProfileLayout;

  @NonNull
  public final Spinner expiryTimeSpinner;

  @NonNull
  public final SwitchMaterial hideLocationSwitch;

  @NonNull
  public final Button logoutButton;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final LinearLayout trustedContactsLayout;

  private ActivityProfileBinding(@NonNull LinearLayout rootView,
      @NonNull SwitchMaterial autoApproveSwitch, @NonNull LinearLayout editProfileLayout,
      @NonNull Spinner expiryTimeSpinner, @NonNull SwitchMaterial hideLocationSwitch,
      @NonNull Button logoutButton, @NonNull MaterialToolbar toolbar,
      @NonNull LinearLayout trustedContactsLayout) {
    this.rootView = rootView;
    this.autoApproveSwitch = autoApproveSwitch;
    this.editProfileLayout = editProfileLayout;
    this.expiryTimeSpinner = expiryTimeSpinner;
    this.hideLocationSwitch = hideLocationSwitch;
    this.logoutButton = logoutButton;
    this.toolbar = toolbar;
    this.trustedContactsLayout = trustedContactsLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.auto_approve_switch;
      SwitchMaterial autoApproveSwitch = ViewBindings.findChildViewById(rootView, id);
      if (autoApproveSwitch == null) {
        break missingId;
      }

      id = R.id.edit_profile_layout;
      LinearLayout editProfileLayout = ViewBindings.findChildViewById(rootView, id);
      if (editProfileLayout == null) {
        break missingId;
      }

      id = R.id.expiry_time_spinner;
      Spinner expiryTimeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (expiryTimeSpinner == null) {
        break missingId;
      }

      id = R.id.hide_location_switch;
      SwitchMaterial hideLocationSwitch = ViewBindings.findChildViewById(rootView, id);
      if (hideLocationSwitch == null) {
        break missingId;
      }

      id = R.id.logout_button;
      Button logoutButton = ViewBindings.findChildViewById(rootView, id);
      if (logoutButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.trusted_contacts_layout;
      LinearLayout trustedContactsLayout = ViewBindings.findChildViewById(rootView, id);
      if (trustedContactsLayout == null) {
        break missingId;
      }

      return new ActivityProfileBinding((LinearLayout) rootView, autoApproveSwitch,
          editProfileLayout, expiryTimeSpinner, hideLocationSwitch, logoutButton, toolbar,
          trustedContactsLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
